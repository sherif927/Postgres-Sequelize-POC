CREATE TABLE IF NOT EXISTS projects (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name  text NOT NULL CHECK (name <> ''),
  priority integer NOT NULL,
  description text,
  deliveryDate data NOT NULL
);

CREATE TABLE IF NOT EXISTS tasks (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL CHECK (name <> ''),
  done boolean 
  projectId integer REFERENCES projects(id)
);


INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('iMotion Clone',1,'Make a prototype for iMotion using node and angular','2020-07-12');

INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('Reddit Clone',2,'Make a prototype for reddit using nestJS','2020-08-04');

INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('ECommerce App',2,'Make an e-commerce website','2020-09-12');

INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('Bitpark Website',1,'Make a website for bitpark using a static site generator','2022-12-12');

INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('iMotion App',1,'Implement the actual website and admin panal','2020-09-12');

INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('Super Mario Clone',2,'Make a super mario bros clone using vanilla javascript','2020-08-04');

INSERT INTO projects (name,priority,description,deliveryDate)
  VALUES ('iMotion Mobile App',2,'make a mobile application for iMotion using flutter','2020-09-12');



INSERT INTO tasks (name,done,projectId)
 VALUES ('Gather requirements',false,1);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Setup Environment',false,1);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Backend',false,1); 

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Frontend',false,1);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Perform Regression Testing',false,1); 


INSERT INTO tasks (name,done,projectId)
 VALUES ('Understand reddit',false,2);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Setup Environment',false,2);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Backend',false,2); 

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Frontend',false,2);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Perform Regression Testing',false,2); 

INSERT INTO tasks (name,done,projectId)
 VALUES ('Design the database',false,3);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Gather Requirements',false,3);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Split requirements into user stories',false,3); 

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Backend',false,3); 

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Frontend',false,3);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Perform Regression Testing',false,3);  

INSERT INTO tasks (name,done,projectId)
 VALUES ('Draw mockups',false,4);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Implement Site',false,4);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Gather requirements',false,5);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Gather requirements',false,6);

INSERT INTO tasks (name,done,projectId)
 VALUES ('Gather requirements',false,7);